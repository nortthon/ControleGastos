//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace Entidades
{
    public partial class tb_usuario
    {
        #region Primitive Properties
    
        public virtual long usu_id
        {
            get;
            set;
        }
    
        public virtual string usu_nome
        {
            get;
            set;
        }
    
        public virtual string usu_email
        {
            get;
            set;
        }
    
        public virtual string usu_login
        {
            get;
            set;
        }
    
        public virtual string usu_senha
        {
            get;
            set;
        }
    
        public virtual byte usu_status
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual ICollection<tb_categoria> tb_categoria
        {
            get
            {
                if (_tb_categoria == null)
                {
                    var newCollection = new FixupCollection<tb_categoria>();
                    newCollection.CollectionChanged += Fixuptb_categoria;
                    _tb_categoria = newCollection;
                }
                return _tb_categoria;
            }
            set
            {
                if (!ReferenceEquals(_tb_categoria, value))
                {
                    var previousValue = _tb_categoria as FixupCollection<tb_categoria>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixuptb_categoria;
                    }
                    _tb_categoria = value;
                    var newValue = value as FixupCollection<tb_categoria>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixuptb_categoria;
                    }
                }
            }
        }
        private ICollection<tb_categoria> _tb_categoria;
    
        public virtual ICollection<tb_conta> tb_conta
        {
            get
            {
                if (_tb_conta == null)
                {
                    var newCollection = new FixupCollection<tb_conta>();
                    newCollection.CollectionChanged += Fixuptb_conta;
                    _tb_conta = newCollection;
                }
                return _tb_conta;
            }
            set
            {
                if (!ReferenceEquals(_tb_conta, value))
                {
                    var previousValue = _tb_conta as FixupCollection<tb_conta>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixuptb_conta;
                    }
                    _tb_conta = value;
                    var newValue = value as FixupCollection<tb_conta>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixuptb_conta;
                    }
                }
            }
        }
        private ICollection<tb_conta> _tb_conta;

        #endregion
        #region Association Fixup
    
        private void Fixuptb_categoria(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (tb_categoria item in e.NewItems)
                {
                    item.tb_usuario = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (tb_categoria item in e.OldItems)
                {
                    if (ReferenceEquals(item.tb_usuario, this))
                    {
                        item.tb_usuario = null;
                    }
                }
            }
        }
    
        private void Fixuptb_conta(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (tb_conta item in e.NewItems)
                {
                    item.tb_usuario = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (tb_conta item in e.OldItems)
                {
                    if (ReferenceEquals(item.tb_usuario, this))
                    {
                        item.tb_usuario = null;
                    }
                }
            }
        }

        #endregion
    }
}
